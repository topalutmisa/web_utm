@{
    ViewBag.Title = "Проверка аутентификации";
    Layout = "~/Views/Shared/_VinlandLayout.cshtml";
}

<div class="container mt-4">
    <div class="auth-check-header">
        <h1 class="page-title">
            <i class="fas fa-user-shield"></i>
            Проверка аутентификации
        </h1>
        <p class="page-subtitle">Диагностика текущего состояния пользователя</p>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            <i class="fas fa-check-circle"></i>
            <strong>Успех:</strong> @TempData["Success"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            <i class="fas fa-exclamation-triangle"></i>
            <strong>Ошибка:</strong> @TempData["Error"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["Warning"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show">
            <i class="fas fa-exclamation-triangle"></i>
            <strong>Внимание:</strong> @TempData["Warning"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="info-card">
                <h4 class="card-title">
                    <i class="fas fa-info-circle"></i>
                    Статус аутентификации
                </h4>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Аутентифицирован:</span>
                        <span class="info-value @(Request.IsAuthenticated ? "text-success" : "text-danger")">
                            @(Request.IsAuthenticated ? "Да" : "Нет")
                        </span>
                    </div>
                    @if (Request.IsAuthenticated)
                    {
                        <div class="info-item">
                            <span class="info-label">Имя пользователя:</span>
                            <span class="info-value">@User.Identity.Name</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Тип аутентификации:</span>
                            <span class="info-value">@User.Identity.AuthenticationType</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="info-card">
                <h4 class="card-title">
                    <i class="fas fa-users-cog"></i>
                    Проверка ролей
                </h4>
                <div class="info-list">
                    <div class="info-item">
                        <span class="info-label">Администратор:</span>
                        <span class="info-value @(User.IsInRole("Administrator") ? "text-success" : "text-danger")">
                            @(User.IsInRole("Administrator") ? "Да" : "Нет")
                        </span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Модератор:</span>
                        <span class="info-value @(User.IsInRole("Moderator") ? "text-success" : "text-danger")">
                            @(User.IsInRole("Moderator") ? "Да" : "Нет")
                        </span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Пользователь:</span>
                        <span class="info-value @(User.IsInRole("User") ? "text-success" : "text-danger")">
                            @(User.IsInRole("User") ? "Да" : "Нет")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Request.IsAuthenticated)
    {
        <div class="row">
            <div class="col-12 mb-4">
                <div class="info-card">
                    <h4 class="card-title">
                        <i class="fas fa-cookie-bite"></i>
                        Данные из cookie
                    </h4>
                    @try
                    {
                        var cookie = Request.Cookies[System.Web.Security.FormsAuthentication.FormsCookieName];
                        if (cookie != null)
                        {
                            var ticket = System.Web.Security.FormsAuthentication.Decrypt(cookie.Value);
                            if (ticket != null)
                            {
                                <div class="info-list">
                                    <div class="info-item">
                                        <span class="info-label">Имя из билета:</span>
                                        <span class="info-value">@ticket.Name</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="info-label">Данные пользователя:</span>
                                        <span class="info-value">@ticket.UserData</span>
                                    </div>
                                    <div class="info-item">
                                        <span class="info-label">Истекает:</span>
                                        <span class="info-value">@ticket.Expiration.ToString("dd.MM.yyyy HH:mm:ss")</span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <p class="text-warning">Не удалось расшифровать билет аутентификации</p>
                            }
                        }
                        else
                        {
                            <p class="text-warning">Cookie аутентификации не найден</p>
                        }
                    }
                    catch (Exception ex)
                    {
                        <p class="text-danger">Ошибка при чтении cookie: @ex.Message</p>
                    }
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-12">
            <div class="actions-card">
                <h4 class="card-title">
                    <i class="fas fa-tools"></i>
                    Быстрые действия
                </h4>
                <div class="action-buttons">
                    @if (!Request.IsAuthenticated)
                    {
                        <a href="@Url.Action("Login", "Account")" class="btn btn-primary">
                            <i class="fas fa-sign-in-alt"></i>
                            Войти в систему
                        </a>
                    }
                    else
                    {
                        if (User.IsInRole("Administrator"))
                        {
                            <a href="@Url.Action("AdminPanel", "Admin")" class="btn btn-success">
                                <i class="fas fa-shield-alt"></i>
                                Перейти к админ-панели
                            </a>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                <strong>Внимание:</strong> У вас нет прав администратора. Обратитесь к администратору для назначения роли.
                            </div>
                        }
                    }
                    <a href="@Url.Action("Index", "Test")" class="btn btn-info">
                        <i class="fas fa-tools"></i>
                        Тестовая панель
                    </a>
                    <a href="@Url.Action("InitializeRoles", "Test")" class="btn btn-warning">
                        <i class="fas fa-users-cog"></i>
                        Инициализировать роли
                    </a>
                    @if (Request.IsAuthenticated && !User.IsInRole("Administrator"))
                    {
                        using (Html.BeginForm("MakeCurrentUserAdmin", "Test", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger" onclick="return confirm('Назначить роль администратора текущему пользователю?')">
                                <i class="fas fa-crown"></i>
                                Сделать меня администратором
                            </button>
                        }
                    }
                    @if (Request.IsAuthenticated)
                    {
                        using (Html.BeginForm("RefreshAuthCookie", "Test", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-secondary">
                                <i class="fas fa-sync-alt"></i>
                                Обновить cookie
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.auth-check-header {
    text-align: center;
    margin-bottom: 40px;
    padding: 30px;
    background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
    color: white;
    border-radius: 15px;
    box-shadow: 0 10px 30px rgba(52, 152, 219, 0.3);
}

.page-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 10px;
}

.page-subtitle {
    font-size: 1.2rem;
    opacity: 0.9;
    margin-bottom: 0;
}

.info-card, .actions-card {
    background: white;
    border-radius: 15px;
    padding: 30px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    border: 1px solid #e0e0e0;
    height: 100%;
}

.card-title {
    color: #2c3e50;
    margin-bottom: 25px;
    font-weight: 600;
    font-size: 1.3rem;
}

.info-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.info-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    border-bottom: 1px solid #f0f0f0;
}

.info-item:last-child {
    border-bottom: none;
}

.info-label {
    font-weight: 600;
    color: #2c3e50;
}

.info-value {
    color: #7f8c8d;
    font-family: 'Courier New', monospace;
    font-weight: 600;
}

.text-success {
    color: #27ae60 !important;
}

.text-danger {
    color: #e74c3c !important;
}

.text-warning {
    color: #f39c12 !important;
}

.action-buttons {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
}

.action-buttons .btn {
    padding: 12px 25px;
    border-radius: 25px;
    font-weight: 600;
    transition: all 0.3s ease;
}

.action-buttons .btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

@@media (max-width: 768px) {
    .page-title {
        font-size: 2rem;
    }
    
    .info-item {
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
    }
    
    .action-buttons {
        justify-content: center;
    }
    
    .action-buttons .btn {
        width: 100%;
        margin-bottom: 10px;
    }
}
</style> 